{"version":3,"sources":["redux/create-reducer.js","redux/dimensions/dimensions.reducer.js","redux/dimensions/dimensions.types.js","redux/calculate/calculate.utils.js","redux/calculate/calculate.reducer.js","redux/calculate/calculate.types.js","redux/root-reducer.js","redux/store.js","config/theme.jsx","redux/calculate/calculate.selectors.js","components/display/display.styles.js","components/display/display.component.jsx","components/button/button.styles.js","components/button/button.component.jsx","redux/calculate/calculate.actions.js","components/button-panel/button-panel.styles.js","components/button-panel/button-panel.component.jsx","containers/app/app.styles.js","containers/app/app.container.jsx","redux/dimensions/dimensions.actions.js","utils/styles/global-styles.js","config/root.jsx","index.jsx"],"names":["createReducer","initialState","reducer","state","type","payload","Object","prototype","hasOwnProperty","call","dimensionsReducer","width","window","innerWidth","height","innerHeight","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","Error","calculateReducer","total","next","buttonName","test","result","includes","parseFloat","calculate","persistConfig","storage","key","whitelist","combineReducers","dimensions","rootReducer","persistReducer","enhancer","compose","applyMiddleware","store","createStore","persistor","persistStore","theme","Theme","children","calculateSelector","selectCalculateTotal","createSelector","selectCalculateNext","Container","styled","Value","mapStateToProps","createStructuredSelector","connect","wideStyles","css","orangeStyles","wide","orange","name","otherProps","onClick","ButtonPanel","setDimensions","useEffect","handleResize","debounce","addEventListener","removeEventListener","fadeIn","keyframes","GlobalStyles","createGlobalStyle","normalize","Root","StylesProvider","injectFirst","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.887ed7e8.chunk.js","sourcesContent":["export const createReducer = (initialState, reducer) => (state = initialState, { type, payload }) => {\n  return Object.prototype.hasOwnProperty.call(reducer, type)\n    ? typeof reducer[type] === 'function'\n      ? reducer[type](state, payload)\n      : reducer[type]\n    : state;\n};\n","import { createReducer } from 'redux/create-reducer';\n\nimport { SET_DIMENSIONS } from './dimensions.types';\n\n/* -------------------------------------------------------------------------- */\n\nconst initialState = {\n  width: window.innerWidth,\n  height: window.innerHeight,\n};\n\nconst reducer = {\n  [SET_DIMENSIONS]: (state, { width, height }) => ({ ...state, width, height }),\n};\n\nexport const dimensionsReducer = createReducer(initialState, reducer);\n","export const SET_DIMENSIONS = 'SET_DIMENSIONS';\n","import Big from 'big.js';\n\n/* -------------------------------------------------------------------------- */\n\nconst isNumber = item => {\n  return /[0-9]+/.test(item);\n};\n\nconst operate = (numberOne, numberTwo, operation) => {\n  const one = Big(numberOne || '0');\n  const two = Big(numberTwo || (operation === 'รท' || operation === 'x' ? '1' : '0'));\n\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n\n  if (operation === 'รท') {\n    if (numberTwo === '0') {\n      // alert('Divide by 0 error');\n      return '0';\n    } else {\n      return one.div(two).toString();\n    }\n  }\n\n  throw Error(`Unknown operation '${operation}'`);\n};\n\nexport const calculate = (state, buttonName) => {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && state.next === '0') {\n      return {};\n    }\n\n    // If there is an operation, update next\n    if (state.operation) {\n      if (state.next) {\n        return { next: state.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n\n    // If there is no operation, update next and clear the value\n    if (state.next) {\n      const next = state.next === '0' ? buttonName : state.next + buttonName;\n      return {\n        next,\n        total: null,\n      };\n    }\n\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '%') {\n    if (state.operation && state.next) {\n      const result = operate(state.total, state.next, state.operation);\n\n      return {\n        total: Big(result)\n          .div(Big('100'))\n          .toString(),\n        next: null,\n        operation: null,\n      };\n    }\n\n    if (state.next) {\n      return {\n        next: Big(state.next)\n          .div(Big('100'))\n          .toString(),\n      };\n    }\n\n    return {};\n  }\n\n  if (buttonName === '.') {\n    if (state.next) {\n      // Ignore a . if the next number already has one\n      if (state.next.includes('.')) {\n        return {};\n      }\n\n      return { next: state.next + '.' };\n    }\n\n    return { next: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (state.next && state.operation) {\n      return {\n        total: operate(state.total, state.next, state.operation),\n        next: null,\n        operation: null,\n      };\n    } else {\n      // '=' with no operation, nothing to do\n      return {};\n    }\n  }\n\n  if (buttonName === '+/-') {\n    if (state.next) {\n      return { next: (-1 * parseFloat(state.next)).toString() };\n    }\n\n    if (state.total) {\n      return { total: (-1 * parseFloat(state.total)).toString() };\n    }\n\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!state.next && !state.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (state.operation) {\n    return {\n      total: operate(state.total, state.next, state.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // No operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!state.next) {\n    return { operation: buttonName };\n  }\n\n  // Save the operation and shift 'next' into 'total'\n  return {\n    total: state.next,\n    next: null,\n    operation: buttonName,\n  };\n};\n","import { createReducer } from 'redux/create-reducer';\n\nimport { CALCULATE } from './calculate.types';\nimport { calculate } from './calculate.utils';\n\n// ----------------------------------------------------------------------------------------- //\n\nconst initialState = {\n  total: null,\n  next: null,\n  operation: null,\n};\n\nconst reducer = {\n  [CALCULATE]: (state, payload) => ({ ...state, ...calculate(state, payload) }),\n};\n\nexport const calculateReducer = createReducer(initialState, reducer);\n","export const CALCULATE = 'CALCULATE';\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport { dimensionsReducer } from 'redux/dimensions/dimensions.reducer';\nimport { calculateReducer } from 'redux/calculate/calculate.reducer';\n\n/* -------------------------------------------------------------------------- */\n\nconst persistConfig = {\n  storage,\n  key: 'root',\n  whitelist: [],\n};\n\nconst reducer = combineReducers({\n  dimensions: dimensionsReducer,\n  calculate: calculateReducer,\n});\n\nexport const rootReducer = persistReducer(persistConfig, reducer);\n","import { createStore, applyMiddleware, compose } from 'redux';\n// import createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore } from 'redux-persist';\n\nimport { rootReducer } from 'redux/root-reducer';\n// import { rootSaga } from 'redux/root-saga';\n\n/* -------------------------------------------------------------------------- */\n\n// Setup redux-saga middleware\n// const sagaMiddleware = createSagaMiddleware();\n\n// List of middlewares\nconst middlewares = [];\n\n// Setup Redux DevTools only in development mode\nconst enhancer =\n  process.env.NODE_ENV === 'development'\n    ? composeWithDevTools(applyMiddleware(...middlewares))\n    : compose(applyMiddleware(...middlewares));\n\nexport const store = createStore(rootReducer, enhancer);\n\nexport const persistor = persistStore(store);\n\n// Run Redux Saga\n// sagaMiddleware.run(rootSaga);\n","import React from 'react';\n\nimport { ThemeProvider } from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nconst theme = {};\n\nconst Theme = ({ children }) => <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n\n/* -------------------------------------------------------------------------- */\n\nexport default Theme;\n","import { createSelector } from 'reselect';\n\n/* -------------------------------------------------------------------------- */\n\nconst calculateSelector = state => state.calculate;\n\nexport const selectCalculateTotal = createSelector([calculateSelector], calculate => calculate.total);\n\nexport const selectCalculateNext = createSelector([calculateSelector], calculate => calculate.next);\n","import styled from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  background-color: #858694;\n  color: white;\n  font-weight: 200;\n  flex: 0 0 auto;\n  width: 100%;\n  height: calc(100% / 6);\n`;\n\nexport const Value = styled.div`\n  font-size: 2.5rem;\n  padding: 0.2rem 0.7rem 0.1rem 0.5rem;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCalculateTotal, selectCalculateNext } from 'redux/calculate/calculate.selectors';\n\nimport { Container, Value } from './display.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst mapStateToProps = createStructuredSelector({\n  total: selectCalculateTotal,\n  next: selectCalculateNext,\n});\n\nconst Display = ({ total, next }) => (\n  <Container>\n    <Value>{next || total || 0}</Value>\n  </Container>\n);\n\n/* -------------------------------------------------------------------------- */\n\nDisplay.propTypes = {\n  total: PropTypes.string,\n  next: PropTypes.string,\n};\n\nexport default connect(mapStateToProps)(Display);\n","import styled, { css } from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nconst wideStyles = css`\n  width: 50%;\n`;\n\nconst orangeStyles = css`\n  button {\n    background-color: #f5923e;\n    color: white;\n  }\n`;\n\nconst getButtonStyles = ({ wide, orange }) => {\n  return wide ? wideStyles : orange ? orangeStyles : null;\n};\n\nexport const Container = styled.div`\n  display: inline-flex;\n  width: 25%;\n  flex: 1 0 auto;\n\n  button {\n    background-color: #e0e0e0;\n    border: 1px solid transparent;\n    font-size: 1.5rem;\n    margin: 0 1px 0 0;\n    flex: 1 0 auto;\n    padding: 0;\n\n    &:focus {\n      border: 1px solid black;\n      outline: none;\n    }\n  }\n\n  &:last-child button {\n    margin-right: 0;\n  }\n\n  ${getButtonStyles}\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { calculate } from 'redux/calculate/calculate.actions';\n\nimport { Container } from './button.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst Button = ({ name, calculate, ...otherProps }) => (\n  <Container {...otherProps}>\n    <button onClick={() => calculate(name)}>{name}</button>\n  </Container>\n);\n\n/* -------------------------------------------------------------------------- */\n\nButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  calculate: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { calculate })(Button);\n","import { CALCULATE } from './calculate.types';\n\n/* -------------------------------------------------------------------------- */\n\nexport const calculate = buttonName => ({\n  type: CALCULATE,\n  payload: buttonName,\n});\n","import styled from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nexport const Container = styled.div`\n  background-color: #858694;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  flex: 1 0 auto;\n\n  > div {\n    width: 100%;\n    margin-bottom: 1px;\n    flex: 1 0 auto;\n    display: flex;\n  }\n`;\n","import React from 'react';\n\nimport Button from 'components/button/button.component';\n\nimport { Container } from './button-panel.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst ButtonPanel = () => (\n  <Container>\n    <div>\n      <Button name=\"AC\" />\n      <Button name=\"+/-\" />\n      <Button name=\"%\" />\n      <Button name=\"รท\" orange />\n    </div>\n\n    <div>\n      <Button name=\"7\" />\n      <Button name=\"8\" />\n      <Button name=\"9\" />\n      <Button name=\"x\" orange />\n    </div>\n\n    <div>\n      <Button name=\"4\" />\n      <Button name=\"5\" />\n      <Button name=\"6\" />\n      <Button name=\"-\" orange />\n    </div>\n\n    <div>\n      <Button name=\"1\" />\n      <Button name=\"2\" />\n      <Button name=\"3\" />\n      <Button name=\"+\" orange />\n    </div>\n\n    <div>\n      <Button name=\"0\" wide />\n      <Button name=\".\" />\n      <Button name=\"=\" orange />\n    </div>\n  </Container>\n);\n\n/* -------------------------------------------------------------------------- */\n\nexport default ButtonPanel;\n","import styled from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  height: 100%;\n`;\n","import React, { useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { setDimensions } from 'redux/dimensions/dimensions.actions';\n\nimport { debounce } from 'lodash-es';\n\nimport Display from 'components/display/display.component';\nimport ButtonPanel from 'components/button-panel/button-panel.component';\n\nimport { Container } from './app.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst App = ({ setDimensions }) => {\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }, 1000);\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [setDimensions]);\n\n  return (\n    <Container>\n      <Display />\n      <ButtonPanel />\n    </Container>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nApp.propTypes = {\n  setDimensions: PropTypes.func,\n};\n\nexport default connect(null, { setDimensions })(App);\n","import { SET_DIMENSIONS } from './dimensions.types';\n\n/* -------------------------------------------------------------------------- */\n\nexport const setDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  payload: dimensions,\n});\n","import { createGlobalStyle, keyframes } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\n/* -------------------------------------------------------------------------- */\n\nconst fadeIn = keyframes`\n  from {\n      opacity: 0;\n  }\n\n  to {\n      opacity: 1;\n  }\n`;\n\nexport const GlobalStyles = createGlobalStyle`\n  ${normalize}\n\n  html {\n    box-sizing: border-box;\n    scroll-behavior: smooth;\n    background: transparent;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    font-family: sans-serif;\n    animation: ${fadeIn} 1s ease;\n  }\n\n  a {\n    text-decoration: none;\n  }\n  \n  html, body, #root {\n    height: 100%;\n  }\n  \n  @media (min-width: 400px) and (min-height: 400px) {\n    html {\n      font-size: 20px;\n    }\n  }\n  \n  @media (min-width: 500px) and (min-height: 500px) {\n    html {\n      font-size: 30px;\n    }\n  }\n  \n  @media (min-width: 600px) and (min-height: 600px) {\n    html {\n      font-size: 40px;\n    }\n  }\n  \n  @media (min-width: 800px) and (min-height: 800px) {\n    html {\n      font-size: 50px;\n    }\n  }  \n`;\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from 'redux/store';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { StylesProvider } from '@material-ui/core/styles';\n\nimport Theme from 'config/theme';\n\nimport App from 'containers/app/app.container';\n\nimport { GlobalStyles } from 'utils/styles/global-styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst Root = () => (\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <Theme>\n        <GlobalStyles />\n\n        <Router>\n          <StylesProvider injectFirst>\n            <App />\n          </StylesProvider>\n        </Router>\n      </Theme>\n    </PersistGate>\n  </Provider>\n);\n\n/* -------------------------------------------------------------------------- */\n\nexport default Root;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Root from 'config/root';\n\n/* -------------------------------------------------------------------------- */\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}